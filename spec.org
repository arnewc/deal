* Problem
Alice and Bob wants to deal one card to each other in a trustless way.

** Data
*** An encoding of the deck
52 integers are fixed in the contract that represent 52 cards in the deck. Call this
=uint[52] deck=
*** N
A large number.
*** Secrets for Alice and Bob
Pair of secret numbers K and L are generated in the front-end such that ~GCD(K, phi(N)) =
1~ and ~L.K = 1 (mod N)~

** Protocol
*Note*: All arithmetic from now are modulo ~N~.
*** Commit_Alice
Alice sends the numbers ~deck[0]**K_Alice, ..., deck[51]**K_Alice~ in a random order and stores it in
~uint[52] cards~
*** Commit_Bob
Bob picks two indices from ~cards~, call it, ~alice_index~ and ~bob_index~. However,
~bob_index~ is not revealed.
*** Play_Bob
Bob sends ~cards[bob_index]**K_Bob~, call it ~bob_card~
*** Play_Alice
Alice sends ~bob_card**L_Alice~, call it ~bob_card~
*** Reveal_Alice
Alice reveals keys ~K_Alice~ and ~L_Alice~
*** Reveal_Bob
Bob reveals keys ~K_Bob~ and ~L_Bob~

** Verify
1. Check if ~cards[alice_index]**L_Alice~ is in ~deck~.
2. Check if ~bob_card**L_Bob~ is in ~deck~.
3. Optionally check if ~cards[0]**L_Alice, ... cards[52]**L_Alice~ is same as ~deck~.
* References
1. https://people.csail.mit.edu/rivest/pubs/SRA81.pdf
2. https://www.youtube.com/watch?v=mthPiiCS24A
